{"version":3,"sources":["webpack:///./src/index.css?d8c3","webpack:///./src/assets/troika.otf","webpack:///./src/ui/ProgressBar.js","webpack:///./src/index.js","webpack:///./src/scenes/RootScene.js","webpack:///./src/utils/fontLoader.js","webpack:///./src/utils/index.js","webpack:///./src/index.css"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","p","progressBarStyles","borderColor","shadowColor","progressColor","progressShadowColor","ui_ProgressBar","ProgressBar","scene","_this","minValue","arguments","length","currentValue","maxValue","width","height","isTextCentered","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","isResize","updateTween","pause","containerWidth","window","innerWidth","containerHeight","setSize","innerHeight","createRoot","createProgress","setupTextStyles","resume","root","clear","offset","radius","halfPI","Math","PI","minusHalfPI","fillStyle","fillRect","beginPath","lineStyle","moveTo","lineTo","arc","closePath","strokePath","progress","valuesAspect","getValuesAspect","borderBaseRadius","borders","tl","bl","br","tr","shadowOffset","fillRoundedRect","textFontPercentage","text","setFontSize","setPosition","displayWidth","boot","nextValue","completeCallback","delay","stop","add","tween","targets","onUpdate","nextCalculatedValue","data","current","textValue","concat","round","setText","onComplete","duration","ease","min","max","make","graphics","style","fontFamily","color","fontStyle","setOrigin","setShadow","setScale","existing","phaser_default","GameObjects","Container","game","scenes_RootScene","RootScene","RootScene_classCallCheck","RootScene_defineProperty","RootScene_assertThisInitialized","RootScene_possibleConstructorReturn","RootScene_getPrototypeOf","cameras","resize","progressBarWidth","progressBar","progressBarHeight","Scene","events","on","resizeHandler","config","type","WEBGL","autoResize","backgroundColor","resolution","devicePixelRatio","gameResizeHadler","Promise","resolve","webfontloader_default","load","classes","custom","families","active","then","Game","addEventListener","f","ms","timer","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","catch","error","console","escape","push"],"mappings":"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","file":"main.11c6027a156b710979c1.js","sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"assets/troika14a045.otf\";","import Phaser from 'phaser';\n\nexport const progressBarStyles = {\n  borderColor: 0x005e09,\n  shadowColor: '#005e09',\n  progressColor: 0xc0ff38,\n  progressShadowColor: 0x27b78d,\n};\n\nclass ProgressBar extends Phaser.GameObjects.Container {\n  constructor(scene, minValue = 0, currentValue = 100, maxValue = 100, width, height, isTextCentered = false) {\n    super(scene);\n    this.scene = scene;\n    this.minValue = minValue;\n    this.currentValue = currentValue;\n    this.maxValue = maxValue;\n    this.updateTween = null;\n    this.isTextCentered = isTextCentered;\n    this.root = this.scene.make.graphics();\n    this.progress = this.scene.make.graphics();\n    this.text = this.scene.make.text({style: {fontFamily: 'troika', color: '#ffffff', fontStyle: 'bold'}});\n    this.text\n      .setOrigin(1, 0.5)\n      .setShadow(2.8, 2.8, progressBarStyles.shadowColor, false, true)\n      .setScale(0.5);\n    const textValue = `${currentValue}/${maxValue} XP`;\n    this.text.setText(textValue);\n    this.boot(false, width, height);\n    this.add([this.root, this.progress, this.text]);\n    this.scene.add.existing(this);\n  }\n  \n  boot = (isResize = false, width, height) => {\n    if (this.updateTween) {\n      this.updateTween.pause();\n    }\n    \n    const containerWidth = width || window.innerWidth * 0.3;\n    const containerHeight = height || containerWidth * 0.11;\n    this.setSize(containerWidth, containerHeight);\n    this.innerWidth = this.width - this.height * 0.09;\n    this.innerHeight = this.height - this.height * 0.09;\n    this.createRoot(isResize);\n    this.createProgress(isResize);\n    this.setupTextStyles();\n    \n    if (this.updateTween) {\n      this.updateTween.resume();\n    }\n  };\n  \n  createRoot = (withClear = false) => {\n    if (withClear) {\n      this.root.clear();\n    }\n    const offset = this.height * 0.045;\n    const radius = this.height * 0.1;\n    const halfPI = Math.PI * 0.5;\n    const minusHalfPI = halfPI * -1;\n    this.root.fillStyle(0x000000, 0.3);\n    this.root.fillRect(offset, offset, this.innerWidth, this.innerHeight);\n    this.root.beginPath();\n    this.root.lineStyle(this.height * 0.09, progressBarStyles.borderColor, 1);\n    this.root.moveTo(radius, 0);\n    this.root.lineTo(this.width - radius, 0);\n    this.root.moveTo(this.width - radius, 0);\n    this.root.arc(this.width - radius, radius, radius, minusHalfPI, 0);\n    this.root.lineTo(this.width, this.height - radius);\n    this.root.moveTo(this.width, this.height - radius);\n    this.root.arc(this.width - radius, this.height - radius, radius, 0, halfPI);\n    this.root.lineTo(radius, this.height);\n    this.root.moveTo(radius, this.height);\n    this.root.arc(radius, this.height - radius, radius, halfPI, Math.PI);\n    this.root.lineTo(0, radius);\n    this.root.moveTo(0, radius);\n    this.root.arc(radius, radius, radius, -Math.PI, minusHalfPI);\n    this.root.closePath();\n    this.root.strokePath();\n  };\n  \n  createProgress = (withClear = false) => {\n    if (withClear) {\n      this.progress.clear();\n    }\n    const valuesAspect = this.getValuesAspect();\n    if (valuesAspect === 0) {\n      return;\n    }\n    const borderBaseRadius = this.innerHeight * 0.09;\n    const borders = {\n      tl: borderBaseRadius,\n      bl: borderBaseRadius,\n      br: valuesAspect < 1 ? 0 : borderBaseRadius,\n      tr: valuesAspect < 1 ? 0 : borderBaseRadius\n    };\n    \n    const offset = this.height * 0.045;\n    const shadowOffset = this.innerHeight * 0.076;\n    this.progress.fillStyle(progressBarStyles.progressShadowColor, 1);\n    this.progress.fillRoundedRect(offset, offset, this.innerWidth * valuesAspect, this.innerHeight, borders);\n    this.progress.fillStyle(progressBarStyles.progressColor, 1);\n    this.progress.fillRoundedRect(\n      offset,\n      offset,\n      this.innerWidth * valuesAspect,\n      this.innerHeight - shadowOffset,\n      borders\n    );\n  };\n  \n  setupTextStyles = () => {\n    const textFontPercentage = this.isTextCentered ? 0.5 : 0.65;\n    this.text.setFontSize(this.height * textFontPercentage * 2);\n    this.text.setPosition(\n      this.isTextCentered ? this.width / 2 + this.text.displayWidth / 2 : this.width - 10,\n      this.height / 2\n    );\n  };\n  \n  resize = (width, height) => {\n    this.boot(true, width, height);\n  };\n  \n  getValuesAspect = () => (this.currentValue - this.minValue) / (this.maxValue - this.minValue);\n  \n  updateProgress = (nextValue, completeCallback, delay = 0) => {\n    if (this.updateTween) {\n      this.updateTween.stop();\n    }\n    if (nextValue >= 0) {\n      this.updateTween = this.scene.add.tween({\n        targets: this,\n        currentValue: nextValue <= this.maxValue ? nextValue : this.maxValue,\n        onUpdate: tween => {\n          const nextCalculatedValue = tween.data[0].current;\n          const textValue = `${Math.round(nextCalculatedValue)}/${this.maxValue} XP`;\n          this.text.setText(textValue);\n          this.createProgress(true);\n        },\n        onComplete: () => {\n          this.updateTween = null;\n          if (completeCallback) {\n            completeCallback();\n          }\n        },\n        duration: 200,\n        ease: 'Linear',\n        delay\n      });\n    }\n  };\n  \n  reset = (min, current, max) => {\n    const textValue = `${Math.round(current)}/${max} XP`;\n    this.text.setText(textValue);\n    this.currentValue = current;\n    this.maxValue = max;\n    this.minValue = min;\n    this.createProgress(true);\n  };\n}\n\nexport default ProgressBar;\n","import Phaser from 'phaser';\nimport {debounce} from './utils';\nimport loadFont from './utils/fontLoader';\nimport RootScene from './scenes/RootScene';\n\nimport './index.css';\n\nconst config = {\n  type: Phaser.WEBGL,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  autoResize: true,\n  backgroundColor: '#c9c9c9',\n  resolution: window.devicePixelRatio || 1,\n  scene: [\n    RootScene,\n  ]\n};\n\nlet game;\n\nconst gameResizeHadler = () => {\n  game.resize(window.innerWidth, window.innerHeight);\n};\n\nloadFont()\n  .then(() => {\n    game = new Phaser.Game(config);\n    \n    window.addEventListener('resize', debounce(gameResizeHadler, 500));\n    \n    setTimeout(gameResizeHadler, 2000);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n","import Phaser from 'phaser';\nimport ProgressBar from '../ui/ProgressBar';\n\nclass RootScene extends Phaser.Scene {\n  constructor() {\n    super('rootScene');\n  }\n  \n  create() {\n    const progressBarWidth = window.innerWidth / 4;\n    const progressBarHeight = 40;\n    this.progressBar = new ProgressBar(this, 0, 333, 666, window.innerWidth / 4, 40, true);\n    this.progressBar.setPosition(window.innerWidth / 2 - progressBarWidth / 2, window.innerHeight / 2 - progressBarHeight / 2);\n    this.events.on('resize', this.resizeHandler);\n  }\n  \n  resizeHandler = () => {\n    this.cameras.resize(window.innerWidth, window.innerHeight);\n    const progressBarWidth = window.innerWidth / 4;\n    const progressBarHeight = 40;\n    this.progressBar.resize(progressBarWidth, progressBarHeight);\n    this.progressBar.setPosition(window.innerWidth / 2 - progressBarWidth / 2, window.innerHeight / 2 - progressBarHeight / 2);\n  }\n}\n\nexport default RootScene;","import WebFont from 'webfontloader';\n\nexport default () =>\n  new Promise(resolve => {\n    WebFont.load({\n      classes: false,\n      custom: {\n        families: ['troika']\n      },\n      active: resolve\n    });\n  });\n","export const debounce = (f, ms) => {\n  let timer = null;\n  \n  return (...args) => {\n    const onComplete = () => {\n      f.apply(this, args);\n      timer = null;\n    };\n    \n    if (timer) {\n      clearTimeout(timer);\n    }\n    \n    timer = setTimeout(onComplete, ms);\n  };\n};","var escape = require(\"../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n  width: 100vw;\\n  height: 100vh;\\n  position: fixed;\\n  overflow: hidden;\\n  font-family: \\\"troika\\\", sans-serif;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: fixed;\\n  overflow: hidden;\\n}\\n\\ncanvas {\\n  width: 100%;\\n  height: 100%;\\n  cursor: crosshair;\\n  background-color: #36441f;\\n}\\n\\n@font-face {\\n  font-family: 'troika';\\n  font-style: normal;\\n  font-weight: normal;\\n  src: url(\" + escape(require(\"./assets/troika.otf\")) + \") format('opentype');\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}